---
import ProjectCard from "@/components/projects/ProjectCard.astro";
import MainLayout from "@/layouts/MainLayout.astro";
import { getCollection, type CollectionEntry } from "astro:content";

let { category } = Astro.params;
if (category === undefined) throw new Error("Category is required");

category = category[0].toUpperCase() + category?.slice(1);
const allProjects: CollectionEntry<"projects">[] =
  await getCollection("projects");

const filteredProjects = allProjects.filter((p) =>
  p.data.category.includes(category!),
);
const categories = ["All", "Fullstack", "Frontend", "Backend"];
---

<MainLayout title={`Projects | ${category}`} desc={`${category} projects by Enaya`}>
  <div class="mb-16">
    <div class="flex-col text-center md:px-10">
      <div class="p-12">
        <h2 class="text-4xl md:text-5xl">
          My <span class="text-teal-500">pr</span><span
            class="border-b-4 text-teal-500 border-gray-300">ojec</span
          ><span class="text-teal-500">ts</span>
        </h2>
      </div>

      <div class="mb-9 text-lg md:text-2xl flex justify-center">
        {
          categories.map((c) => (
            <p
              class={
                c === category
                  ? "mx-3 p-1 px-4 focus:outline-none rounded text-teal-500"
                  : "mx-3 p-1 px-4 focus:outline-none rounded hover:text-teal-500"
              }
            >
              {c !== "All" ? (
                <a href={`/projects/${c.toLowerCase()}`}>{c}</a>
              ) : (
                <a href="/projects">{c}</a>
              )}
            </p>
          ))
        }
      </div>

      <!--list of projects -->
      <div
        class="grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3"
        transition:name="myprojects"
        transition:animate="slide"
      >
        {filteredProjects.map((p) => <ProjectCard project={p} />)}
      </div>
    </div>
  </div>
</MainLayout>
